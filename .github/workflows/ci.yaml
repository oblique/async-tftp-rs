name: CI
on: [push, pull_request]

jobs:
    test-linux:
        name: Tests
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        timeout-minutes: 20
        env:
            RUST_BACKTRACE: 1
        steps:
            - name: Install atftp (Linux)
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y atftp
            - name: Install tftp (Windows)
              if: matrix.os == 'windows-latest'
              shell: pwsh
              run: |
                  New-Item -ItemType directory -Path "${env:TEMP}\\tftp"
                  echo "::add-path::${env:TEMP}\\tftp"
                  Invoke-WebRequest -OutFile "${env:TEMP}\\tftp\\tftp.exe" https://www.winagents.com/downloads/tftp.exe
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
            - name: Checkout sources
              uses: actions/checkout@v1
            - name: Run tests
              uses: actions-rs/cargo@v1
              with:
                  command: test --all-features
            - name: Run long tests
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: '--all-features -- tests:: --ignored'
    lints:
        name: Lints
        runs-on: ubuntu-latest
        steps:
            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: rustfmt, clippy
            - uses: actions/checkout@v1
            - name: Run cargo fmt
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check
            - name: Run cargo clippy
              uses: actions-rs/cargo@v1
              with:
                  command: clippy
                  args: -- -D clippy::all
